{"version":3,"file":"static/js/829.0a6df18a.chunk.js","mappings":"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","sources":["components/Review/Review.styled.jsx","components/Review/Review.jsx","movieApiService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  align-items: stretch;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 36px;\n`;\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n  gap: 36px;\n`;\nexport const Author = styled.p`\n  color: #3939d7;\n  font-weight: 600;\n  font-size: 18px;\n  font-style: italic;\n`;\n\nexport const Content = styled.p`\n  font-size: 16px;\n  text-indent: 5%;\n  text-align: justify;\n`;\n\nexport const NoReviewsText = styled.p`\n  margin-top: 24px;\n  margin-bottom: 24px;\n  text-align: center;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ImSad } from 'react-icons/im';\n\nimport { fetchMovieApi } from 'movieApiService';\nimport {\n  ReviewsList,\n  ReviewItem,\n  Author,\n  Content,\n  NoReviewsText,\n} from './Review.styled';\n\nconst Review = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  // console.log(reviews);\n  useEffect(() => {\n    fetchMovieApi.getMovieReview(id).then(setReviews);\n  }, [id]);\n\n  if (reviews === null) {\n    return;\n  }\n\n  return (\n    <div>\n      {reviews.length !== 0 ? (\n        <ReviewsList>\n          {reviews.map(el => (\n            <ReviewItem key={el.id}>\n              <Author>Author: {el.author} </Author>\n              <Content>{el.content}</Content>\n            </ReviewItem>\n          ))}\n        </ReviewsList>\n      ) : (\n        <NoReviewsText>\n          {' '}\n          We don't have any reviews for this movie <ImSad />\n        </NoReviewsText>\n      )}\n    </div>\n  );\n};\n\nexport default Review;","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = 'c73a67b83f8baa351fa09bb14e13e412';\n\nexport class MovieApiService {\n\n#API_KEY = KEY;\n\nconstructor() {\n    this.BASE_URL = 'https://image.tmdb.org/t/p/w500';\n    this.defaultImg =\n    'https://m.media-amazon.com/images/M/MV5BMTRkZGE0YWYtMDFhOS00N2I4LTljMTMtYjk0MTI2YmVhOTU4XkEyXkFqcGdeQXVyNjgxNzM0NDI@._V1_.jpg';\n}\n\nasync getPopularMovies(page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      page: page,\n    });\n\n    const { data } = await axios.get('trending/movie/day', { params });\n    return data;\n  }\n\n  async getMovieByQuery(query, page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: query,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    });\n\n    const { data } = await axios.get('/search/movie', { params });\n    return data;\n  }\n\n  async getMovieById(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    });\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?${params}`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error('Oops, there is no movie with that name');\n      }\n      return response.json();\n    });\n  }\n\n  async getMovieCast(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/credits?${params}`);\n    return data.cast;\n  }\n\n  async getMovieReview(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/reviews?${params}`);\n    return data.results;\n  }\n\n}\n\nexport const fetchMovieApi = new MovieApiService();"],"names":["ReviewsList","styled","_templateObject","_taggedTemplateLiteral","ReviewItem","_templateObject2","Author","_templateObject3","Content","_templateObject4","NoReviewsText","_templateObject5","id","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchMovieApi","then","_jsx","children","length","map","el","_jsxs","author","content","ImSad","axios","_API_KEY","_classPrivateFieldLooseKey","MovieApiService","_classCallCheck","Object","defineProperty","writable","value","this","BASE_URL","defaultImg","_createClass","key","_getPopularMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","params","_yield$axios$get","data","wrap","_context","prev","next","URLSearchParams","api_key","_classPrivateFieldLooseBase","sent","abrupt","stop","_x","apply","arguments","_getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","language","include_adult","_x2","_x3","_getMovieById","_callee3","_context3","fetch","concat","response","ok","Error","json","_x4","_getMovieCast","_callee4","_yield$axios$get3","_context4","cast","_x5","_getMovieReview","_callee5","_yield$axios$get4","_context5","results","_x6"],"sourceRoot":""}