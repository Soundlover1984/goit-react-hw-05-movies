{"version":3,"file":"static/js/691.9ea2423e.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","movieApiService.js","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnElement = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 12px 16px;\n  font-size: 16px;\n  font-weight: 500;\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n\n  border: ${props =>\n    props.status === 'search'\n      ? 'none'\n      : props.status === 'load'\n      ? '1px solid rgba(0, 128, 75, 0.7)'\n      : 'grey'};\n\n  background-color: ${props =>\n    props.status === 'search'\n      ? 'rgba(0, 128, 75, 0.7)'\n      : props.status === 'load'\n      ? 'transparent'\n      : 'grey'};\n\n  color: ${props =>\n    props.status === 'search'\n      ? 'hsla(0, 0%, 100%, 1)'\n      : props.status === 'load'\n      ? 'black'\n      : 'grey'};\n\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    color: white;\n    background-color: rgba(0, 128, 75, 0.7);\n    border: none;\n    box-shadow: 0px 12px 8px 4px #0b78474d;\n  }\n\n  & > svg {\n    margin-right: 8px;\n  }\n`;","import PropTypes from 'prop-types';\nimport { BtnElement } from './Button.styled';\n\n\nexport const Btn = ({\n  text,\n  status,\n  icon: Icon = null,\n  disabled = false,\n  type = 'button',\n  onClick = null,\n}) => {\n  return (\n    <BtnElement\n      status={status}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {Icon && <Icon></Icon>}\n      {text}\n    </BtnElement>\n  );\n};\n\nBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.any,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  status: PropTypes.string,\n  onClick: PropTypes.func,\n};","import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 16px;\n  margin: 0 auto;\n  padding: 24px;\n`;\n\nexport const MovieListItem = styled.li`\n  width: calc((100%-80px) / 6);\n  transform: scale(1);\n  border-radius: 12px;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  &:hover > p {\n    opacity: 1;\n  }\n\n  img {\n    border-radius: 12px;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport const MovieName = styled.p`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(16, 178, 108, 0.7);\n  border-radius: 12px;\n  font-size: 16px;\n  color: white;\n  font-weight: 500;\n  padding: 12px;\n  height: 30%;\n  opacity: 0;\n\n  & > span {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    /* transform: translateY(-50%); */\n    width: 50px;\n    background-color: rgba(228, 222, 30, 0.8);\n    padding: 10px;\n    border-radius: 12px;\n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieApi } from '../../movieApiService';\nimport { MovieListStyled, MovieListItem, MovieName } from './MovieList.styled';\n\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation;\n    return (\n        <MovieListStyled>\n        {movies.map(movie => {\n          // console.log(movie);\n          return (\n            <MovieListItem key={movie.id}>\n              <MovieName>\n                {movie.title} <span>{movie.vote_average.toFixed(2)}</span>\n              </MovieName>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `${fetchMovieApi.BASE_URL}${movie.poster_path}`\n                      : fetchMovieApi.defaultImg\n                  }\n                  alt={movie.title}\n                  width=\"200\"\n                />\n              </Link>\n            </MovieListItem>\n          );\n        })}\n      </MovieListStyled>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n      })\n    ),\n  };","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = 'c73a67b83f8baa351fa09bb14e13e412';\n\nexport class MovieApiService {\n\n#API_KEY = KEY;\n\nconstructor() {\n    this.BASE_URL = 'https://image.tmdb.org/t/p/w500';\n    this.defaultImg =\n    'https://www.jakartaplayers.org/uploads/1/2/5/5/12551960/2297419_orig.jpg';\n}\n\nasync getPopularMovies(page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      page: page,\n    });\n\n    const { data } = await axios.get('trending/movie/day', { params });\n    return data;\n  }\n\n  async getMovieByQuery(query, page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: query,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    });\n\n    const { data } = await axios.get('/search/movie', { params });\n    return data;\n  }\n\n  async getMovieById(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    });\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?${params}`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error('Oops, there is no movie with that name');\n      }\n      return response.json();\n    });\n  }\n\n  async getMovieCast(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/credits?${params}`);\n    return data.cast;\n  }\n\n  async getMovieReview(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/reviews?${params}`);\n    return data.results;\n  }\n\n}\n\nexport const fetchMovieApi = new MovieApiService();","import styled from 'styled-components';\n\nexport const MovieMain = styled.main`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;","import { fetchMovieApi } from \"movieApiService\";\nimport { useState, useEffect } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Btn } from '../../components/Button/Button';\nimport { MovieMain } from './Movies.styled';\n\n\n\nexport const Movies = () => {\n\nconst [movies, setMovies] = useState([]);\n\nconst [page, setPage] = useState(1);\n\nconst [total_results, setTotalResults] = useState(null);\n\nconst [searchParams, setSearchParams] = useSearchParams();\n\nconst query = searchParams.get('query') ?? '';\n\n\nconst formSubmit = inputQuery => {\n    setPage(1);\n    setMovies([]);\n    setSearchParams(inputQuery !== '' ? { query: inputQuery } : {});\n  };\n\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    fetchMovieApi.getMovieByQuery(query, page).then(r => {\n      setMovies(prevMovie => [...prevMovie, ...r.results]);\n      setTotalResults(r.total_results);\n    });\n  }, [query, page]);\n\n  if (!movies) {\n    return;\n  }\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  \n  return (\n    <MovieMain>\n      <SearchForm onSubmit={formSubmit} />\n      {query && <MovieList movies={movies} />}\n      {total_results / 20 >= page && (\n        <Btn text=\"Load more\" status=\"load\" onClick={loadMore} />\n      )}\n    </MovieMain>\n  );\n};\n"],"names":["BtnElement","styled","_templateObject","_taggedTemplateLiteral","props","status","Btn","_ref","text","_ref$icon","icon","Icon","_ref$disabled","disabled","_ref$type","type","_ref$onClick","onClick","_jsxs","children","_jsx","MovieListStyled","MovieListItem","_templateObject2","MovieName","_templateObject3","MovieList","movies","location","useLocation","map","movie","title","vote_average","toFixed","Link","to","concat","id","state","from","src","poster_path","fetchMovieApi","alt","width","axios","_API_KEY","_classPrivateFieldLooseKey","MovieApiService","_classCallCheck","Object","defineProperty","writable","value","this","BASE_URL","defaultImg","_createClass","key","_getPopularMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","params","_yield$axios$get","data","wrap","_context","prev","next","URLSearchParams","api_key","_classPrivateFieldLooseBase","sent","abrupt","stop","_x","apply","arguments","_getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","language","include_adult","_x2","_x3","_getMovieById","_callee3","_context3","fetch","then","response","ok","Error","json","_x4","_getMovieCast","_callee4","_yield$axios$get3","_context4","cast","_x5","_getMovieReview","_callee5","_yield$axios$get4","_context5","results","_x6","MovieMain","Movies","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setPage","_useState5","_useState6","total_results","setTotalResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","r","prevMovie","_toConsumableArray","SearchForm","onSubmit","inputQuery","prevPage"],"sourceRoot":""}