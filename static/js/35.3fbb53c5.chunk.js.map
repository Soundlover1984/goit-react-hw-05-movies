{"version":3,"file":"static/js/35.3fbb53c5.chunk.js","mappings":"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","sources":["movieApiService.js","pages/Home/Home.styled.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = 'c73a67b83f8baa351fa09bb14e13e412';\n\nexport class MovieApiService {\n\n#API_KEY = KEY;\n\nconstructor() {\n    this.BASE_URL = 'https://image.tmdb.org/t/p/w500';\n    this.defaultImg =\n    'https://www.jakartaplayers.org/uploads/1/2/5/5/12551960/2297419_orig.jpg';\n}\n\nasync getPopularMovies(page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      page: page,\n    });\n\n    const { data } = await axios.get('trending/movie/day', { params });\n    return data;\n  }\n\n  async getMovieByQuery(query, page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: query,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    });\n\n    const { data } = await axios.get('/search/movie', { params });\n    return data;\n  }\n\n  async getMovieById(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    });\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?${params}`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error('Oops, there is no movie with that name');\n      }\n      return response.json();\n    });\n  }\n\n  async getMovieCast(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/credits?${params}`);\n    return data.cast;\n  }\n\n  async getMovieReview(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/reviews?${params}`);\n    return data.results;\n  }\n\n}\n\nexport const fetchMovieApi = new MovieApiService();","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  text-transform: uppercase;\n  letter-spacing: 1.7;\n  margin-bottom: 20px;\n`;","import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 16px;\n  margin: 0 auto;\n  padding: 24px;\n`;\n\nexport const MovieListItem = styled.li`\n  width: calc((100%-80px) / 6);\n  transform: scale(1);\n  border-radius: 12px;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  &:hover > p {\n    opacity: 1;\n  }\n\n  img {\n    border-radius: 12px;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport const MovieName = styled.p`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(16, 178, 108, 0.7);\n  border-radius: 12px;\n  font-size: 16px;\n  color: white;\n  font-weight: 500;\n  padding: 12px;\n  height: 30%;\n  opacity: 0;\n\n  & > span {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    /* transform: translateY(-50%); */\n    width: 50px;\n    background-color: rgba(228, 222, 30, 0.8);\n    padding: 10px;\n    border-radius: 12px;\n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieApi } from '../../movieApiService';\nimport { MovieListStyled, MovieListItem, MovieName } from './MovieList.styled';\n\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation;\n    return (\n        <MovieListStyled>\n        {movies.map(movie => {\n          // console.log(movie);\n          return (\n            <MovieListItem key={movie.id}>\n              <MovieName>\n                {movie.title} <span>{movie.vote_average.toFixed(2)}</span>\n              </MovieName>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `${fetchMovieApi.BASE_URL}${movie.poster_path}`\n                      : fetchMovieApi.defaultImg\n                  }\n                  alt={movie.title}\n                  width=\"200\"\n                />\n              </Link>\n            </MovieListItem>\n          );\n        })}\n      </MovieListStyled>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n      })\n    ),\n  };","import styled from 'styled-components';\n\nexport const BtnElement = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 12px 16px;\n  font-size: 16px;\n  font-weight: 500;\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n\n  border: ${props =>\n    props.status === 'search'\n      ? 'none'\n      : props.status === 'load'\n      ? '1px solid rgba(0, 128, 75, 0.7)'\n      : 'grey'};\n\n  background-color: ${props =>\n    props.status === 'search'\n      ? 'rgba(0, 128, 75, 0.7)'\n      : props.status === 'load'\n      ? 'transparent'\n      : 'grey'};\n\n  color: ${props =>\n    props.status === 'search'\n      ? 'hsla(0, 0%, 100%, 1)'\n      : props.status === 'load'\n      ? 'black'\n      : 'grey'};\n\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    color: white;\n    background-color: rgba(0, 128, 75, 0.7);\n    border: none;\n    box-shadow: 0px 12px 8px 4px #0b78474d;\n  }\n\n  & > svg {\n    margin-right: 8px;\n  }\n`;","import PropTypes from 'prop-types';\nimport { BtnElement } from './Button.styled';\n\n\nexport const Btn = ({\n  text,\n  status,\n  icon: Icon = null,\n  disabled = false,\n  type = 'button',\n  onClick = null,\n}) => {\n  return (\n    <BtnElement\n      status={status}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {Icon && <Icon></Icon>}\n      {text}\n    </BtnElement>\n  );\n};\n\nBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.any,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  status: PropTypes.string,\n  onClick: PropTypes.func,\n};","import { fetchMovieApi } from \"movieApiService\";\nimport { useState, useEffect } from \"react\";\nimport { Title, Main } from './Home.styled';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Btn } from '../../components/Button/Button';\n\nexport const Home = () => {\n    const [movies, setMovies] = useState([]);\n\n    const [page, setPage] = useState(1);\n  \n    const [total_results, setTotalResults] = useState(null);\n\n    useEffect(() => {\n        fetchMovieApi.getPopularMovies(page).then(data => {\n          setMovies(movies => [...movies, ...data.results]);\n          setTotalResults(data.total_results);\n        });\n      }, [page]);\n\n      const loadMore = () => {\n        setPage(page => page + 1);\n      };\n    \n    \n  return (\n    <Main>\n      <Title>Trending today </Title>\n      <MovieList movies={movies} />\n      {total_results / 20 >= page && (\n        <Btn text=\"Load more\" status=\"load\" onClick={loadMore} />\n      )}\n    </Main>\n  );\n};\n  \n"],"names":["axios","_API_KEY","_classPrivateFieldLooseKey","MovieApiService","_classCallCheck","Object","defineProperty","writable","value","this","BASE_URL","defaultImg","_createClass","key","_getPopularMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","params","_yield$axios$get","data","wrap","_context","prev","next","URLSearchParams","api_key","_classPrivateFieldLooseBase","sent","abrupt","stop","_x","apply","arguments","_getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","language","include_adult","_x2","_x3","_getMovieById","_callee3","id","_context3","fetch","concat","then","response","ok","Error","json","_x4","_getMovieCast","_callee4","_yield$axios$get3","_context4","cast","_x5","_getMovieReview","_callee5","_yield$axios$get4","_context5","results","_x6","fetchMovieApi","Main","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","MovieListStyled","MovieListItem","MovieName","_templateObject3","MovieList","_ref","movies","location","useLocation","_jsx","children","map","movie","_jsxs","title","vote_average","toFixed","Link","to","state","from","src","poster_path","alt","width","BtnElement","props","status","Btn","text","_ref$icon","icon","Icon","_ref$disabled","disabled","_ref$type","type","_ref$onClick","onClick","Home","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setPage","_useState5","_useState6","total_results","setTotalResults","useEffect","getPopularMovies","_toConsumableArray"],"sourceRoot":""}