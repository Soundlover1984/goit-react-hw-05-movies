{"version":3,"file":"static/js/720.0cdae0fb.chunk.js","mappings":"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","sources":["components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","movieApiService.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const BtnElement = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 12px 16px;\n  font-size: 16px;\n  font-weight: 500;\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n  cursor: pointer;\n\n  border: ${props =>\n    props.status === 'search'\n      ? 'none'\n      : props.status === 'load'\n      ? '1px solid rgba(127, 187, 9, 0.7)'\n      : 'grey'};\n\n  background-color: ${props =>\n    props.status === 'search'\n      ? 'rgba(127, 187, 9, 0.7)'\n      : props.status === 'load'\n      ? 'transparent'\n      : 'grey'};\n\n  color: ${props =>\n    props.status === 'search'\n      ? 'hsla(0, 0%, 100%, 1)'\n      : props.status === 'load'\n      ? 'black'\n      : 'grey'};\n\n  transform: scale(1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n    color: white;\n    background-color: rgba(154, 205, 50, 1);\n    border: none;\n    box-shadow: 0px 12px 8px 4px #0b78474d;\n  }\n\n  & > svg {\n    margin-right: 8px;\n  }\n`;","import PropTypes from 'prop-types';\nimport { BtnElement } from './Button.styled';\nimport { Spinner } from 'react-bootstrap';\nimport '/node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nexport const Btn = ({\n  text,\n  status,\n  icon: Icon = null,\n  disabled = false,\n  type = 'button',\n  onClick = null,\n  onLoaderPlay,\n}) => {\n  return (\n    <BtnElement\n      status={status}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {Icon && <Icon></Icon>}\n\n      {onLoaderPlay && (\n        <Spinner\n          as=\"span\"\n          variant=\"light\"\n          size=\"sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n          animation=\"border\"\n        />\n      )}\n      {text}\n    </BtnElement>\n  );\n};\n\nBtn.propTypes = {\n  text: PropTypes.string.isRequired,\n  icon: PropTypes.any,\n  disabled: PropTypes.bool,\n  type: PropTypes.string,\n  status: PropTypes.string,\n  onClick: PropTypes.func,\n};","import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 16px;\n  margin: 0 auto;\n  padding: 24px;\n`;\n\nexport const MovieListItem = styled.li`\n  width: calc((100%-80px) / 6);\n  transform: scale(1);\n  border-radius: 12px;\n\n  &:hover {\n    transform: scale(1.03);\n  }\n\n  &:hover > p {\n    opacity: 1;\n  }\n\n  img {\n    border-radius: 12px;\n    height: 100%;\n    width: 300px;\n  }\n`;\n\nexport const MovieName = styled.p`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(16, 178, 108, 0.7);\n  border-radius: 12px;\n  font-size: 16px;\n  color: white;\n  font-weight: 500;\n  padding: 12px;\n  height: 30%;\n  opacity: 0;\n\n  & > span {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 50px;\n    background-color: rgba(228, 222, 30, 0.8);\n    padding: 10px;\n    border-radius: 12px;\n  }\n`;","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMovieApi } from 'movieApiService';\nimport { MovieListStyled, MovieListItem, MovieName } from './MovieList.styled';\nimport { nanoid } from 'nanoid';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const movieId = nanoid()\n  return (\n    <MovieListStyled>\n      {movies.map(movie => {\n        // console.log(movie);\n        return (\n          <MovieListItem key={movieId}>\n            <MovieName>\n              {movie.title} <span>{movie.vote_average.toFixed(2)}</span>\n            </MovieName>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={\n                  movie.poster_path\n                    ? `${fetchMovieApi.BASE_URL}${movie.poster_path}`\n                    : fetchMovieApi.defaultImg\n                }\n                alt={movie.title}\n                width=\"200\"\n              />\n            </Link>\n          </MovieListItem>\n        );\n      })}\n    </MovieListStyled>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};","import axios from \"axios\";\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\nconst KEY = 'c73a67b83f8baa351fa09bb14e13e412';\n\nexport class MovieApiService {\n\n#API_KEY = KEY;\n\nconstructor() {\n    this.BASE_URL = 'https://image.tmdb.org/t/p/w500';\n    this.defaultImg =\n    'https://m.media-amazon.com/images/M/MV5BMTRkZGE0YWYtMDFhOS00N2I4LTljMTMtYjk0MTI2YmVhOTU4XkEyXkFqcGdeQXVyNjgxNzM0NDI@._V1_.jpg';\n    \n}\n\nasync getPopularMovies(page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      page: page,\n    });\n\n    const { data } = await axios.get('trending/movie/day', { params });\n    return data;\n  }\n\n  async getMovieByQuery(query, page) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      query: query,\n      page: page,\n      language: 'en-US',\n      include_adult: false,\n    });\n\n    const { data } = await axios.get('/search/movie', { params });\n    return data;\n  }\n\n  async getMovieById(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n      include_adult: false,\n    });\n    return await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?${params}`\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error('Oops, there is no movie with that name');\n      }\n      return response.json();\n    });\n  }\n\n  async getMovieCast(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/credits?${params}`);\n    return data.cast;\n  }\n\n  async getMovieReview(id) {\n    const params = new URLSearchParams({\n      api_key: this.#API_KEY,\n      language: 'en-US',\n    });\n    const { data } = await axios.get(`movie/${id}/reviews?${params}`);\n    return data.results;\n  }\n\n}\n\nexport const fetchMovieApi = new MovieApiService();","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: stretch;\n  justify-content: center;\n  position: relative;\n  margin-bottom: 30px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 12px 16px;\n  margin-right: 36px;\n  border-radius: 12px;\n  border: 1px solid black;\n  width: 30vw;\n  border: 1px solid rgba(127, 187, 9, 0.7);\n  box-shadow: 0px 12px 8px 4px #cab1b14d;\n\n  &:focus,\n  &:hover {\n    box-shadow: 0px 12px 8px 4px #0b78474d;\n  }\n`;","import { BsSearch } from 'react-icons/bs';\nimport { Form, Input } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\nimport { Btn } from '../Button/Button';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { query } = e.target.elements;\n    onSubmit(query.value);\n    e.target.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <label>\n          <Input type=\"text\" name=\"query\" />\n        </label>\n        <Btn type=\"submit\" icon={BsSearch} text=\"Search\" status=\"search\" />\n      </Form>\n    </div>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\n\nexport const MovieMain = styled.main`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\n","import { fetchMovieApi } from \"movieApiService\";\nimport { useState, useEffect } from \"react\"\nimport { useSearchParams } from \"react-router-dom\";\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Btn } from '../../components/Button/Button';\nimport { MovieMain } from './Movies.styled';\n\n\n\nconst Movies = () => {\n\nconst [movies, setMovies] = useState([]);\nconst [page, setPage] = useState(1);\nconst [total_results, setTotalResults] = useState(null);\nconst [searchParams, setSearchParams] = useSearchParams();\nconst query = searchParams.get('query') ?? '';\n\n\nconst formSubmit = inputQuery => {\n    setPage(1);\n    setMovies([]);\n    setSearchParams(inputQuery !== '' ? { query: inputQuery } : {});\n  };\n\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    fetchMovieApi.getMovieByQuery(query, page).then(r => {\n      setMovies(prevMovie => [...prevMovie, ...r.results]);\n      setTotalResults(r.total_results);\n    });\n  }, [query, page]);\n\n  if (!movies) {\n    return;\n  }\n\n  const loadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  \n  return (\n    <MovieMain>\n      <SearchForm onSubmit={formSubmit} />\n      {query && <MovieList movies={movies} />}\n      {total_results / 20 >= page && (\n        <Btn text=\"Load more\" status=\"search\" onClick={loadMore} />\n      )}\n    </MovieMain>\n  );\n};\n\nexport default Movies;"],"names":["BtnElement","styled","_templateObject","_taggedTemplateLiteral","props","status","Btn","_ref","text","_ref$icon","icon","Icon","_ref$disabled","disabled","_ref$type","type","_ref$onClick","onClick","onLoaderPlay","_jsxs","children","_jsx","Spinner","as","variant","size","role","animation","MovieListStyled","MovieListItem","_templateObject2","MovieName","_templateObject3","MovieList","movies","location","useLocation","movieId","nanoid","map","movie","title","vote_average","toFixed","Link","to","concat","id","state","from","src","poster_path","fetchMovieApi","alt","width","axios","_API_KEY","_classPrivateFieldLooseKey","MovieApiService","_classCallCheck","Object","defineProperty","writable","value","this","BASE_URL","defaultImg","_createClass","key","_getPopularMovies","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","params","_yield$axios$get","data","wrap","_context","prev","next","URLSearchParams","api_key","_classPrivateFieldLooseBase","sent","abrupt","stop","_x","apply","arguments","_getMovieByQuery","_callee2","query","_yield$axios$get2","_context2","language","include_adult","_x2","_x3","_getMovieById","_callee3","_context3","fetch","then","response","ok","Error","json","_x4","_getMovieCast","_callee4","_yield$axios$get3","_context4","cast","_x5","_getMovieReview","_callee5","_yield$axios$get4","_context5","results","_x6","Form","Input","SearchForm","onSubmit","e","preventDefault","target","elements","reset","name","BsSearch","MovieMain","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setPage","_useState5","_useState6","total_results","setTotalResults","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","r","prevMovie","_toConsumableArray","inputQuery","prevPage"],"sourceRoot":""}